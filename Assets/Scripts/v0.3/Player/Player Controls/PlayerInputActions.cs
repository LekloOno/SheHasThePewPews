//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/v0.3/Player/Player Controls/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Arena"",
            ""id"": ""33ca82bc-6a26-4e27-a4ee-ad35f7605543"",
            ""actions"": [
                {
                    ""name"": ""Running"",
                    ""type"": ""Value"",
                    ""id"": ""79b7b279-bafd-4389-bea7-147c8d358ecd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Ability_1"",
                    ""type"": ""Value"",
                    ""id"": ""fc0a6f27-e6bf-40cf-b6bc-5334b8e12d93"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Ability_2"",
                    ""type"": ""Value"",
                    ""id"": ""4e3dca80-6edf-4cda-9f0c-90c64dfb8db3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""cbaf3501-7e63-41dc-81c1-06a131350240"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slide"",
                    ""type"": ""Button"",
                    ""id"": ""e313f624-a6a0-4e3c-ad39-30e5e8fd0f63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""877d8b90-2b90-4698-a241-0cd824203937"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Reset"",
                    ""type"": ""Button"",
                    ""id"": ""e012d439-b0d1-47b3-97b9-00d86059ecab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""d6dce71d-5863-4dad-a7e8-8bab10eef10f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Running"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8315a195-8ed1-4274-8b9b-1125cabc583f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Running"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1739a2a8-ca2d-4e33-9a33-ce0b7646d285"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Running"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c8a483ae-adc7-457f-a7ee-fa18ecd589a9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Running"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""186e7c56-9de2-477b-b70a-2bceee60149e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Running"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1c0702d9-9eec-4fe1-83c7-2d255213b516"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8a28055-31a1-4bae-ac17-abcf73539e69"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4fdcbd7-71f0-47e9-a8c9-73b86cd7084e"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e51c1b1b-fc37-4fe2-9102-e1b890ecc6af"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31adfe59-d634-41d8-a390-e2cf79543dcd"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b49157d-bccc-4b76-b6e1-393f2c3514ff"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Arena
        m_Arena = asset.FindActionMap("Arena", throwIfNotFound: true);
        m_Arena_Running = m_Arena.FindAction("Running", throwIfNotFound: true);
        m_Arena_Ability_1 = m_Arena.FindAction("Ability_1", throwIfNotFound: true);
        m_Arena_Ability_2 = m_Arena.FindAction("Ability_2", throwIfNotFound: true);
        m_Arena_Jump = m_Arena.FindAction("Jump", throwIfNotFound: true);
        m_Arena_Slide = m_Arena.FindAction("Slide", throwIfNotFound: true);
        m_Arena_Look = m_Arena.FindAction("Look", throwIfNotFound: true);
        m_Arena_Reset = m_Arena.FindAction("Reset", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Arena
    private readonly InputActionMap m_Arena;
    private IArenaActions m_ArenaActionsCallbackInterface;
    private readonly InputAction m_Arena_Running;
    private readonly InputAction m_Arena_Ability_1;
    private readonly InputAction m_Arena_Ability_2;
    private readonly InputAction m_Arena_Jump;
    private readonly InputAction m_Arena_Slide;
    private readonly InputAction m_Arena_Look;
    private readonly InputAction m_Arena_Reset;
    public struct ArenaActions
    {
        private @PlayerInputActions m_Wrapper;
        public ArenaActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Running => m_Wrapper.m_Arena_Running;
        public InputAction @Ability_1 => m_Wrapper.m_Arena_Ability_1;
        public InputAction @Ability_2 => m_Wrapper.m_Arena_Ability_2;
        public InputAction @Jump => m_Wrapper.m_Arena_Jump;
        public InputAction @Slide => m_Wrapper.m_Arena_Slide;
        public InputAction @Look => m_Wrapper.m_Arena_Look;
        public InputAction @Reset => m_Wrapper.m_Arena_Reset;
        public InputActionMap Get() { return m_Wrapper.m_Arena; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ArenaActions set) { return set.Get(); }
        public void SetCallbacks(IArenaActions instance)
        {
            if (m_Wrapper.m_ArenaActionsCallbackInterface != null)
            {
                @Running.started -= m_Wrapper.m_ArenaActionsCallbackInterface.OnRunning;
                @Running.performed -= m_Wrapper.m_ArenaActionsCallbackInterface.OnRunning;
                @Running.canceled -= m_Wrapper.m_ArenaActionsCallbackInterface.OnRunning;
                @Ability_1.started -= m_Wrapper.m_ArenaActionsCallbackInterface.OnAbility_1;
                @Ability_1.performed -= m_Wrapper.m_ArenaActionsCallbackInterface.OnAbility_1;
                @Ability_1.canceled -= m_Wrapper.m_ArenaActionsCallbackInterface.OnAbility_1;
                @Ability_2.started -= m_Wrapper.m_ArenaActionsCallbackInterface.OnAbility_2;
                @Ability_2.performed -= m_Wrapper.m_ArenaActionsCallbackInterface.OnAbility_2;
                @Ability_2.canceled -= m_Wrapper.m_ArenaActionsCallbackInterface.OnAbility_2;
                @Jump.started -= m_Wrapper.m_ArenaActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_ArenaActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_ArenaActionsCallbackInterface.OnJump;
                @Slide.started -= m_Wrapper.m_ArenaActionsCallbackInterface.OnSlide;
                @Slide.performed -= m_Wrapper.m_ArenaActionsCallbackInterface.OnSlide;
                @Slide.canceled -= m_Wrapper.m_ArenaActionsCallbackInterface.OnSlide;
                @Look.started -= m_Wrapper.m_ArenaActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_ArenaActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_ArenaActionsCallbackInterface.OnLook;
                @Reset.started -= m_Wrapper.m_ArenaActionsCallbackInterface.OnReset;
                @Reset.performed -= m_Wrapper.m_ArenaActionsCallbackInterface.OnReset;
                @Reset.canceled -= m_Wrapper.m_ArenaActionsCallbackInterface.OnReset;
            }
            m_Wrapper.m_ArenaActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Running.started += instance.OnRunning;
                @Running.performed += instance.OnRunning;
                @Running.canceled += instance.OnRunning;
                @Ability_1.started += instance.OnAbility_1;
                @Ability_1.performed += instance.OnAbility_1;
                @Ability_1.canceled += instance.OnAbility_1;
                @Ability_2.started += instance.OnAbility_2;
                @Ability_2.performed += instance.OnAbility_2;
                @Ability_2.canceled += instance.OnAbility_2;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Slide.started += instance.OnSlide;
                @Slide.performed += instance.OnSlide;
                @Slide.canceled += instance.OnSlide;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Reset.started += instance.OnReset;
                @Reset.performed += instance.OnReset;
                @Reset.canceled += instance.OnReset;
            }
        }
    }
    public ArenaActions @Arena => new ArenaActions(this);
    public interface IArenaActions
    {
        void OnRunning(InputAction.CallbackContext context);
        void OnAbility_1(InputAction.CallbackContext context);
        void OnAbility_2(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSlide(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnReset(InputAction.CallbackContext context);
    }
}
